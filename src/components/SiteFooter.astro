---
/**
 * src/components/Footer.astro
 * - Server-side fetch of /wp-json/hw/v1/options with Basic Auth (if WP_AUTH_BASIC set)
 * - Prop override wins (sitePhone)
 * - Uses local image fallbacks if site is behind basic auth (so icons show in browsers)
 */

const WP_BASE_URL = (import.meta.env.WP_BASE_URL || "").trim();

/** Basic Auth header for WP Engine (server-side only) */
function authHeaders(): Record<string, string> {
  const pair = (process.env.WP_AUTH_BASIC || "").trim(); // "user:pass"
  if (!pair) return {};
  const token = Buffer.from(pair, "utf8").toString("base64");
  return { Authorization: `Basic ${token}` };
}

const HAS_BASIC_AUTH = !!(process.env.WP_AUTH_BASIC || "").trim();

/** ---- Types ---- */
interface Props {
  sitePhone?: string; // optional override (wins over API)
  phoneIconSrc?: string; // default based on WP/public
  mapImagePath?: string; // path relative to WP_BASE_URL or local
  quoteHref?: string; // CTA link
}

const {
  sitePhone: sitePhoneProp,
  phoneIconSrc = `${WP_BASE_URL}/wp-content/uploads/2025/09/phone.svg`,
  mapImagePath = `${WP_BASE_URL}/wp-content/uploads/2025/08/map-bg.png`,
  quoteHref = "#quote",
} = Astro.props as Props;

/** ---- Fetch options from WP (server-side) ---- */
let apiPhone = "";
try {
  if (WP_BASE_URL) {
    const res = await fetch(`${WP_BASE_URL}/wp-json/hw/v1/options`, {
      cache: "no-store",
      headers: { Accept: "application/json", ...authHeaders() },
    });
    const ct = res.headers.get("content-type") || "";
    const text = await res.text();

    if (!res.ok) {
      console.warn(
        "[Footer] Options fetch failed:",
        res.status,
        text.slice(0, 160)
      );
    } else {
      // tolerate mislabelled content-type
      let json: any = null;
      try {
        json = JSON.parse(text);
      } catch {
        /* non-JSON (unexpected) */
      }
      apiPhone = String(json?.site_phone ?? "");
    }
  } else {
    console.warn("[Footer] WP_BASE_URL is missing; skipping options fetch.");
  }
} catch (e: any) {
  console.warn("[Footer] Options fetch error:", e?.message || e);
}

/** Final phone: prop overrides API */
const sitePhone = (sitePhoneProp && String(sitePhoneProp)) || apiPhone || "";

/** Map image absolute URL (use local when behind basic auth) */

/** Build tel: href from human-readable phone */
function telHref(num: string) {
  const digits = (num || "").replace(/[^\d+]/g, "");
  return digits ? `tel:${digits}` : "";
}
---

<footer id="the-footer" class="mt-40 pr zindex10 mb-40">
  <div class="hw-contain">
    <div class="w100 tal footer-cta flex" data-scroll-css-progress data-scroll>
      <div class="footer-cta-inner flex tal">
        <div class="footer-cta-left flex">
          <h2
            class="round-vw-lh footer-cta-left-heading lilblur ls-5"
            data-sal="slide-up"
            data-sal-duration="1800"
          >
            What are you<br />Waiting for?
          </h2>
        </div>

        <div class="footer-cta-right ofh pr">
          <h3 class="footer-cta-right-header lilblur wrap-chars ls-5 pr w100">
            <span class="min-[900px]:block hidden">Get in Touch</span>
            <span class="min-[900px]:hidden block">Reach<br /> Out</span>
          </h3>

          <div
            class="abs-full footer-cta-right-content flex align-items-center justify-center tal"
          >
            <div
              itemscope
              itemtype="https://schema.org/Organization"
              class="address-wrap icon-marker flex tal eyebrow"
            >
              <div>
                <!-- Long Island Office -->
                <div
                  class="flex tal address"
                  itemscope
                  itemtype="https://schema.org/PostalAddress"
                  itemprop="address"
                >
                  <h3>Long Island Office:</h3>
                  <p>
                    <span itemprop="streetAddress"
                      >50 Vanderbilt Motor Pkwy</span
                    >
                    <div class='city-state inline-block'><span class='comma'>, </span><span itemprop="addressLocality">Commack</span> <span itemprop="addressRegion">NY</span> <span itemprop="postalCode">11725</span>
                    </div>
                  </p>
                </div>

                <!-- NYC Office -->
                <div
                  class="flex tal address"
                  itemscope
                  itemtype="https://schema.org/PostalAddress"
                  itemprop="address"
                >
                  <h3>New York City Office:</h3>
                  <p>
                    <span itemprop="streetAddress">421 Seventh Ave</span>
                    <div class='city-state inline-block'><span class='comma'>, </span><span itemprop="addressRegion">NY</span> <span itemprop="postalCode">10001</span></div>
                  </p>
                </div>

                <!-- Hours -->
                <p>
                  <time itemprop="openingHours" datetime="Mo-Fr 09:00-17:00">
                    Mon – Fri (9am – 5pm)
                  </time>
                </p>
              </div>
            </div>

            <div
              class="footer-cta-btns eyebrow flex justify-center gap-4 abs w100"
            >
              <a
                class="footer-btn icon-after flex align-items-center icon-arrow-right footer-btn"
                href={quoteHref}
              >
                <span>Get an Estimate</span>
              </a>

              <a
                class="footer-btn tel bg-gold flex align-items-center"
                href={telHref(sitePhone)}
                aria-label={sitePhone ? `Call us at ${sitePhone}` : "Call us"}
              >
                <img
                  class="footer-btn-phone-icon of-contain"
                  src={phoneIconSrc}
                  alt="Phone icon"
                  loading="lazy"
                  decoding="async"
                />
                <span class="hidden min-[700px]:inline-block">CALL US:</span>
                {sitePhone || ""}
              </a>
            </div>
          </div>
        </div>
      </div>
      <!-- /.footer-cta-inner -->
    </div>
    <!-- /.footer-cta -->
  </div>
  <!-- /.hw-contain -->
</footer>

<img
  data-scroll
  decoding="async"
  loading="lazy"
  fetchpriority="low"
  src={mapImagePath}
  class="map-parallax"
  alt="Map background"
/>


<style is:global>

.footer-cta {
  will-change: transform;
  /* .transitionfix() → generic GPU/paint hints */
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;

  transform: scale(clamp(0.8, calc(0.8 + (var(--progress) * 2.2 * 0.2)), 1))
             translateY(clamp(0px, calc((1 - var(--progress) * 2.2) * 35%), 35%));
}

.footer-cta-inner,
.footer-cta {
  min-height: 37rem;
}

.footer-cta-left {
  flex-direction: column;
  padding: 2rem 2rem 2rem 2.25rem;

  h2 {
    margin-top: auto;
  }
}

.footer-cta-left-heading {
  font-size: 4.2vw;
  line-height: 0.92em;
  font-weight: 500;
}

.footer-cta-left {
  flex: 1;
}

.footer-cta-right-header {
  line-height: 1em;
  font-size: 10.1vw;
  top: -0.16em;
  text-transform: uppercase;
  white-space: nowrap;
  margin-left: -0.045em;
  margin-right: -0.02em;
  font-weight: 500;
  color: #9ac6b5;
  opacity: 0.28;
}

.footer-btn {
  justify-content: center;
}
.footer-cta-right-content {
  padding: 2rem;

  .eyebrow {
    font-size: 1.4rem;
  }
  .icon-marker:before {
    line-height: 1em;
    font-size: 3.25rem;
    top: 0.12em;
    margin-right: 0.25rem;
    position: relative;
  }

  p,
  .address {
    align-items: center;
    line-height: 2.5rem;
  }

  h3 {
    font-weight: 700 !important;
  }

  *:not(h3) {
    font-weight: 500;
  }
}

@media (min-width: 700px) {
  .footer-cta-right-content .icon-marker:before {
    font-size: 5.25rem;
  }
}

@media (min-width: 1800px) {
  .footer-cta-left-heading {
    font-size: 9rem;
    line-height: 8.5rem;
  }

  .footer-cta-right-header {
    font-size: 16.2rem;
    margin-left: -2.7rem;
    line-height: 1em;
    margin-top: -0.13em;
  }
}

.footer-cta-btns {
  left: 0;
  bottom: 0;
  padding-bottom: 2rem;
}

.footer-btn {
  border-radius: 4rem;
  padding: 0 3.5rem 0 4rem;
  height: 6rem;
  line-height: 6rem;
  font-size: 1.65rem;
  font-weight: 400 !important;
}

.footer-cta-btns {
  gap: 3rem;
}

.address-wrap {
  margin: 0 auto;
  width: 680px;
}

.footer-btn-phone-icon {
  margin-right: 1.5rem;
}

.icon-arrow-right.footer-btn {
  background: var(--mint);
  padding: 0 3.5rem 0 5rem;

  &:after {
    width: 1em;
    font-size: 4rem;
    padding-top: 2px;
    /* keep existing arrow icon via your icon font setup */
  }
}

@media (max-width: 1119px) {
  .footer-cta-left {
    display: none !important;
  }

  .footer-cta-right {
    margin: 0 auto;
  }

  .footer-cta-right-header {
    font-size: 15.2vw;
  }
}

@media (max-width: 879px) {
  .footer-cta-right-header {
    margin-left: -0.1em;
    font-size: calc(16.55vw - 1rem);
  }
}

@media (max-width: 699px) {
  .footer-cta-right-content .eyebrow {
    font-size: 1.2rem;
  }
}

@media (min-width: 1190px) {
  .footer-btn {
    font-size: 1.75rem;
    padding: 0 2.5rem 0 3rem;
  }
}

@media (max-width: 899px) {
  .footer-cta-right-content {
    margin-top: auto;
    flex-direction: column;
    position: relative !important;
    padding-top: 0 !important;
    height: auto !important;
  }
  .footer-cta-right-header {
    font-weight: 550;
    margin-bottom: 1.5rem;
    line-height: 0.8em;
    top: -0.04em;
    font-size: 12.5vw;
    left: -0.04em;
    margin-left: 0;
  }
  .footer-cta-btns {
    margin-top: auto;
    position: relative !important;
    padding-bottom: 0;
  }
  .footer-cta-btns {
    margin-top: 5rem;
  }
  .footer-cta-right {
    display: flex;
    flex-direction: column;
  }
}

@media (max-width: 714px) {
  .icon-marker:before {
    margin-left: -0.5rem;
    margin-right: 0.5rem;
  }
  .footer-btn {
    flex: 1;
    font-size: 1.4rem;
    padding: 0 1.5rem 0 2rem;
  }

  .icon-arrow-right.footer-btn:after {
    padding-left: 0 !important;
  }
  .icon-arrow-right.footer-btn span {
    display: inline-block;
    margin-left: -1rem;
  }

  .footer-cta-right-content {
    padding-top: 8rem;
  }
}

@media (max-width: 669px) {
  .footer-cta-right-content .icon-marker:before {
    top: 0;
  }

  .footer-cta-right time,
  .footer-cta-right .address {
    line-height: 1.75rem;
    font-size: 1.4rem;
  }
  .footer-cta-right .address {
    display: block !important;
    margin-bottom: 2rem;

    .comma {
      display: none;
    }
  }
}

@media (max-width: 579px) {
  .footer-cta-btns {
    display: block !important;
  }

  .footer-btn {
    margin-top: 1rem;
  }

  .footer-cta-right {
    width: 100%;
  }
}

@media (max-width: 499px) {
  .footer-btn {
    flex: 1;
    font-size: 1.8rem;
    text-align: center;
    padding: 0 1.5rem 0 2rem;
  }

  .icon-arrow-right.footer-btn {
    padding: 0 3rem 0 4.75rem;
  }


  .footer-cta-right-content .icon-marker:before {
    font-size: 2rem;
  }

  .icon-arrow-right.footer-btn {
    font-size: 1.6rem
  }
}


</style>