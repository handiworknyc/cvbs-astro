---
// src/components/siteNav.astro
import { getHeaderMenu } from "../lib/wp/getHeaderMenu";
const WP_BASE_URL = import.meta.env.WP_BASE_URL;

/** Normalize host (strip www.) for robust same-origin checks */
function normalizeHost(host: string) {
  return String(host || "").replace(/^www\./i, "").toLowerCase();
}

/** Convert WP absolute URLs in HTML to Astro-relative paths (preserves ?query and #hash). */
function rewriteMenuUrls(html: string, wpBase: string) {
  if (!html) return html;
  let base: URL | null = null;
  try { base = new URL(wpBase); } catch { base = null; }

  return html.replace(/href=(['"])([^'"]+)\1/gi, (full, quote, href) => {
    try {
      // skip non-http links & pure hashes
      if (/^(mailto:|tel:|sms:|javascript:|#)/i.test(href)) return full;

      // Absolute URL?
      if (/^https?:\/\//i.test(href)) {
        const u = new URL(href);
        if (
          base &&
          normalizeHost(u.hostname) === normalizeHost(base.hostname)
        ) {
          const path = u.pathname || "/";
          const search = u.search || "";
          const hash = u.hash || "";
          return `href=${quote}${path}${search}${hash}${quote}`;
        }
        return full; // different origin -> leave as-is
      }

      // Relative URL already
      return full;
    } catch {
      return full;
    }
  });
}

// Fetch WP menu HTML and rewrite URLs
const rawHeaderMenu = await getHeaderMenu(); // string with <ul>…</ul> or just <li>…</li>
const headerMenu = rewriteMenuUrls(rawHeaderMenu, WP_BASE_URL);

// ---- Helpers ----
async function tryFetch(url: string) {
  try {
    const res = await fetch(url, { headers: { "Accept": "application/json" } });
    const text = await res.text(); // handle non-JSON error bodies too
    let data: any = null;
    try { data = JSON.parse(text); } catch { /* not JSON */ }
    return { ok: res.ok, status: res.status, url, data, raw: text };
  } catch (err: any) {
    return { ok: false, status: 0, url, data: null, raw: String(err) };
  }
}

function cleanTel(s: string) {
  return `tel:${String(s || "").replace(/[^+\d]/g, "")}`;
}

// ---- Fetch email/phone from Options (probe multiple endpoints) ----
const endpoints = [
  `${WP_BASE_URL}/wp-json/hw/v1/options`,
  `${WP_BASE_URL}/wp-json/acf/v3/options/options`,
  `${WP_BASE_URL}/wp-json/acf/v3/options`,
  `${WP_BASE_URL}/wp-json/acf/options/options`,
  `${WP_BASE_URL}/wp-json/options/acf`,
];

let email = "";
let phone = "";
let probeLog: Array<{ url: string; status: number; keys?: string[]; ok: boolean }> = [];
let chosenEndpoint: string | null = null;

for (const url of endpoints) {
  const r = await tryFetch(url);
  const keys = r.data && typeof r.data === "object"
    ? Object.keys(r.data?.acf ?? r.data)
    : undefined;
  probeLog.push({ url: r.url, status: r.status, ok: r.ok, keys });

  // Accept either { site_phone, site_email } OR { acf: { site_phone, site_email } }
  const root = r.data?.acf ?? r.data ?? null;
  const maybePhone = root?.site_phone;
  const maybeEmail = root?.site_email;

  if (maybePhone || maybeEmail) {
    phone = String(maybePhone ?? "");
    email = String(maybeEmail ?? "");
    chosenEndpoint = url;
    break;
  }
}

// Optional fallbacks via env (define if helpful)
email = email || import.meta.env.PUBLIC_FALLBACK_EMAIL || "";
phone = phone || import.meta.env.PUBLIC_FALLBACK_PHONE || "";

// Hrefs & assets
const phoneHref = phone ? cleanTel(phone) : undefined;
const logoSrc = `${WP_BASE_URL}/wp-content/uploads/2025/08/cropped-cvbsfinalnew.png.webp`;
const phoneIcon = `${WP_BASE_URL}/wp-content/uploads/2025/09/phone.svg`;
const googleLogo = `${WP_BASE_URL}/wp-content/uploads/2025/09/google.svg`;
const googleStars = `${WP_BASE_URL}/wp-content/uploads/2025/08/stars.svg`;

---

<header id="header" class="group mob-menu-abs">
  <div class='header-inner'>
    <div class="hw-contain flex-wrap tal align-items-center">

      <a class="logo" id='header-logo-a' href="/">
        <img class='logo-img' src={logoSrc} alt="Logo" />
      </a>

      <nav id="main-nav" class="pr tac resp-header-menu header-nav collapse">
        <div class='main-nav-inner pr'>
          <ul class="group resp-header-menu-ul align-items-center flex-wrap" data-sal data-sal-repeat>
            <!-- dump the WP menu <li>s only (getHeaderMenu may include <ul>; safe to inject either way) -->
            <Fragment set:html={headerMenu} />
            {phone && (
              <li class="header-phone menu-item">
                <a href={phoneHref} class="c-green flex-wrap align-items-center tal">
                  <img class="critical of-contain" src={phoneIcon} alt="Phone" />
                  <span class="the-num">{phone}</span>
                </a>
              </li>
            )}
          </ul>
        </div>
      </nav>

      <div class="header-right align-items-center flex-wrap">
        <a class="block header-btn header-quote-btn c-white bg-brandgreen clash" href="/">Get a Quote</a>

        {phone && (
          <a href={phoneHref} class="mob-header-phone c-green flex-wrap align-items-center tal">
            <img class="critical" src={phoneIcon} alt="Phone" />
            <span class="the-num">{phone}</span>
          </a>
        )}

        <a class="google-reviews clash flex-wrap tal align-items-center" href="/" aria-label="Google Reviews">
          <img src={googleLogo} class="critical header-google-logo of-contain" alt="Google" />
          <div class="google-reviews-right">
            5 Star Rated
            <img class="google-stars" src={googleStars} alt="5 stars" />
          </div>
        </a>
      </div>

      <div class="nav-toggle-wrap flex-wrap align-items-center">
        <button class="nav-toggle collapsed first-load" aria-label="Click to view the main menu" data-toggle="collapse" data-target="#main-nav"><span></span></button>
      </div>
    </div>
  </div>
</header>

<script type="module">
  import initStickyHeader from '/src/scripts/sticky-header.ts';
  initStickyHeader();
  import initDropdowns from "/src/scripts/dropdowns.ts";
  const root = document.getElementById("header-nav") || document;
  initDropdowns(root);
</script>

<script>
  var theheader = document.getElementById('header'),
    ogheaderheight = theheader.offsetHeight;

  HW.slidemsgclosing = false;

  HW.setHeaderVar = function(){
    var slidemsgheight = 0,
      headerheight = theheader.offsetHeight;

    HW.headerHeight = headerheight;

    var thyContainer = document.querySelectorAll('.header-inner > .container-fluid > .flex-wrap')[0];

    document.querySelector(':root').style.setProperty('--headerHeight', (headerheight) + 'px');
  };

  var sctop = document.documentElement.scrollTop;

  if(sctop == 0) {
    HW.$html.classList.add('hw-headroom-top');
  }

  HW.setHeaderVar();

  var $navtoggle = $$('.nav-toggle')[0];
  $navtoggle.classList.add('shown');

  HW.requestTimeout(function(){
    $navtoggle.classList.remove('shown');	
    HW.requestTimeout(function(){
      $navtoggle.classList.remove('first-load');		
    }, 250);
  }, 600);
</script>
